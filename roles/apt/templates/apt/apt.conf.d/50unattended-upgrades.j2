{{ ansible_managed | comment('c') }}

// Unattended-Upgrade::Origins-Pattern controls which packages are
// upgraded.
Unattended-Upgrade::Origins-Pattern {
{% if unattended_origins_patterns is defined %}
  {% for origin in unattended_origins_patterns %}
    "{{ origin }}";
  {% endfor %}
{% else %}
  {% for origin in __unattended_origins_patterns %}
   "{{ origin }}";
  {% endfor %}
{% endif %}
};

// List of packages to not update (regexp are supported)
Unattended-Upgrade::Package-Blacklist {
{% for package in unattended_package_blacklist %}
      "{{package}}";
{% endfor %}
};

// This option allows you to control if on a unclean dpkg exit
// unattended-upgrades will automatically run
//   dpkg --force-confold --configure -a
// The default is true, to ensure updates keep getting installed
Unattended-Upgrade::AutoFixInterruptedDpkg "{{ 'true' if unattended_autofix_interrupted_dpkg else 'false' }}";

// Split the upgrade into the smallest possible chunks so that
// they can be interrupted with SIGTERM. This makes the upgrade
// a bit slower but it has the benefit that shutdown while a upgrade
// is running is possible (with a small delay)
Unattended-Upgrade::MinimalSteps "{{ 'true' if unattended_upgrade_minimal_steps else 'false' }}";

// Install all unattended-upgrades when the machine is shuting down
// instead of doing it in the background while the machine is running
// This will (obviously) make shutdown slower
Unattended-Upgrade::InstallOnShutdown "{{ 'true' if unattended_install_on_shutdown else 'false' }}";

// Send email to this address for problems or packages upgrades
// If empty or unset then no email is sent, make sure that you
// have a working mail setup on your system. A package that provides
// 'mailx' must be installed. E.g. "user@example.com"
Unattended-Upgrade::Mail "{{ unattended_upgrade_mail }}";

// Set this value to "true" to get emails only on errors. Default
// is to always send a mail if Unattended-Upgrade::Mail is set
Unattended-Upgrade::MailOnlyOnError "{{ 'true' if unattended_upgrade_mail_only_on_error else 'false' }}";

// Remove unused automatically installed kernel-related packages
// (kernel images, kernel headers and kernel version locked tools).
Unattended-Upgrade::Remove-Unused-Kernel-Packages "{{ 'true' if unattended_upgrade_remove_unused_kernel_packages else 'false' }}";

// Do automatic removal of new unused dependencies after the upgrade
// (equivalent to apt-get autoremove)
Unattended-Upgrade::Remove-Unused-Dependencies "{{ 'true' if unattended_upgrade_remove_unused_dependencies else 'false' }}";

// Automatically reboot *WITHOUT CONFIRMATION*
//  if the file /run/reboot-required is found after the upgrade
Unattended-Upgrade::Automatic-Reboot "{{ 'true' if apt_automatic_reboot else 'false' }}";

// If automatic reboot is enabled and needed, reboot at the specific
// time instead of immediately
//  Default: "now"
Unattended-Upgrade::Automatic-Reboot-Time "{{ apt_automatic_reboot_time }}";
