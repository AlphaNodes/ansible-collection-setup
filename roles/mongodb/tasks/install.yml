---
- name: Establish some role-related facts
  ansible.builtin.set_fact:
    mongodb_major_version: "{{ mongodb_version[0:3] | string }}"

- name: Add APT key
  ansible.builtin.apt_key:
    keyserver: "{{ mongodb_apt_keyserver if not mongodb_apt_key_from_url | bool else omit }}"
    url: "{{ mongodb_apt_key_url[mongodb_major_version] if mongodb_apt_key_from_url | bool else omit }}"
    id: "{{ mongodb_apt_key_id[mongodb_major_version] }}"
  when: mongodb_package == 'mongodb-org'
  tags:
    - skip_ansible_lint

- name: Fail when used wrong mongodb_version variable
  ansible.builtin.fail:
    msg: "mongodb_version variable should be 4.0, 4.2, 4.4, 5.0 or 6.0"
  when: (mongodb_package == 'mongodb-org' and
        (mongodb_version is not defined
         or mongodb_repository[mongodb_major_version] is not defined))

- name: Add APT repository
  ansible.builtin.apt_repository:
    repo: "{{ mongodb_repository[version_item] }}"
    update_cache: true
  with_items: "{{ mongodb_major_version }}"
  loop_control:
    loop_var: version_item
  when: mongodb_package == 'mongodb-org'

- name: Install MongoDB package
  ansible.builtin.apt:
    name: "{{ item }}{% if (mongodb_version | length > 3) %}={{ mongodb_version }}{% endif %}"
    state: "{{ mongodb_package_state }}"
    update_cache: true
  with_items:
    - "{{ mongodb_package }}"
    - "{{ mongodb_package }}-database-tools-extra"
    - "{{ mongodb_package }}-mongos"
    - "{{ mongodb_package }}-server"
    - "{{ mongodb_package }}-shell"
    - "{{ mongodb_package }}-tools"
  notify: Restart mongodb

- name: Check if NUMA is available on host
  ansible.builtin.command: "ls -1 /proc/1/numa_maps"
  register: numa_available
  ignore_errors: true
  changed_when: false
  check_mode: false
  when: mongodb_use_numa | bool

- name: Don't use NUMA if it is unavailable on host
  ansible.builtin.set_fact:
    mongodb_use_numa: false
  when: (mongodb_use_numa | bool and numa_available.rc != 0)

- name: Install numactl package
  ansible.builtin.apt:
    name: numactl
    state: present
  when: mongodb_use_numa | bool

- name: Add systemd configuration if present
  ansible.builtin.template:
    src: systemd/mongodb.service.j2
    dest: /lib/systemd/system/{{ mongodb_daemon_name }}.service
    mode: 0644
  when:
    - mongodb_manage_systemd_unit | bool
  notify:
    - Reload systemd daemon

- name: Add symlink for systemd
  ansible.builtin.file:
    src: /lib/systemd/system/{{ mongodb_daemon_name }}.service
    dest: /etc/systemd/system/multi-user.target.wants/{{ mongodb_daemon_name }}.service
    state: link
  when:
    - mongodb_manage_systemd_unit | bool
  notify:
    - Reload systemd daemon

- name: Install PyMongo package
  ansible.builtin.apt:
    name: "{{ mongodb_pymongo_package }}"
    state: present
  when: not mongodb_pymongo_from_pip

- name: Using pip
  when: mongodb_pymongo_from_pip
  block:
    - name: Include pip role
      ansible.builtin.include_role:
        name: alphanodes.setup.pip

    - name: Install PyMongo pip package
      ansible.builtin.pip:
        name:
          - pymongo
        state: "{{ mongodb_pymongo_pip_version is defined | ternary('present', 'latest') }}"
        version: "{{ mongodb_pymongo_pip_version | default(omit) }}"
