---

- name: Set fact gitlab_go_file
  ansible.builtin.set_fact:
    gitlab_go_file: "go{{ gitlab_go_version }}.linux-amd64.tar.gz"

- name: Check gitlab_go_file exists
  ansible.builtin.stat:
    path: '{{ software_dir }}/{{ gitlab_go_file }}'
  register: gitlab_go_file_exists

- name: Check gitlab_go_path exists
  ansible.builtin.stat:
    path: '{{ gitlab_go_path }}/bin/go'
  register: gitlab_go_path_exists

- name: Delete existing path for update - {{ gitlab_go_path }}
  ansible.builtin.file:
    path: '{{ gitlab_go_path }}'
    state: absent
  when: not gitlab_go_file_exists.stat.exists and gitlab_go_path_exists.stat.exists

- name: Creating {{ gitlab_go_path }}
  ansible.builtin.file:
    path: '{{ gitlab_go_path }}'
    state: directory
    mode: 0755
    owner: root
    group: root
  when: not gitlab_go_path_exists.stat.exists

- name: Download gitlab_go_file archive version {{ gitlab_go_version }}
  ansible.builtin.get_url:
    url: https://dl.google.com/go/{{ gitlab_go_file }}
    dest: '{{ software_dir }}/{{ gitlab_go_file }}'
    mode: 0644
  when: not gitlab_go_file_exists.stat.exists

- name: Extract gitlab_go_file archive
  ansible.builtin.unarchive:
    src: '{{ software_dir }}/{{ gitlab_go_file }}'
    dest: /usr/local
    owner: root
    group: root
    copy: false
  when: not gitlab_go_path_exists.stat.exists or not gitlab_go_file_exists.stat.exists

- name: Create symlinks to go binaries
  ansible.builtin.file:
    src: /usr/local/go/bin/{{ item }}
    dest: /usr/local/bin/{{ item }}
    force: true
    state: link
  loop:
    - go
    - gofmt
